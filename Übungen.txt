ÜBUNG	1

Ü 1.1	Robo’s tits Doro: 7 MInuten
Gerade haben wir wunderschöne Brüste gebaut. Konstruiert nun die Brüste eines Roboters und färbt sie nach euren Vorstellungen ein. Kleiner Tipp: sie sind auf jeden Fall eckig!

Ü 1.2	Romantisches Gebirge Doro: 5 MInuten
Zeichnet eine Zickzack-Linie mit zwei Spitzen. Achtet darauf, dass sich die Linien an den Gipfeln und in den Tälern genau treffen.




ÜBUNG	2

Ü 2.1	be square Doro: 2 MInuten
Schreibt ein Skript, das in der Mitte der Seite ein Quadrat zeichnet.

Ü 2.2	b.creative 
	Yeah, jetzt kennt ihr schon die ersten Funktionen, die euch basil.js bietet! Schreibt ein Skript, mit dem ihr 	euer InDesign-Dokument kreativ gestaltet. 

Ü 2.3	typo Teaser Doro: 1 MInute
Fügt nun in euer Skript folgenden Code ein und seht was passiert: 

var myText = "I LOVE ROBO"; var xPos = 20; var yPos = 20; var widthTextframe = 150; var heightTextframe = 30; b.text(myText, xPos, yPos, widthTextframe, heightTextframe);

Achtung: jeder Variablenname darf in einem Skript nur einmal vorkommen. Falls ihr in eurem Skript bereits Variablen mit den Namen deklariert habt, passt ihr einfach den Code oben an.




ÜBUNG 	3

Ü 3.1	Minus Doro: 5 MInuten
Schreibt ein Skript, das auf eurer Seite in regelmäßigen Abständen zehn Rechtecke neben- oder untereinander zeichnet. Die Rechtecke sollen die Form eines Minuszeichen haben.

Ü 3.2	Minus mal Minus Doro: 5 MInuten
Erstellt ein Raster aus Minuszeichen. Die Anzahl der Zeilen und Spalten ist euch überlassen.					
Ü 3.3	b.creative
Entwickelt ausgehend von eurem Minuszeichen-Raster eine interessante Gestaltung und platziert euren Namen auf der Seite, wie in der Ü 2.3. Probiert dabei die Funktionen aus, die wir gerade gemeinsam kennen gelernt haben (b.rotate, b.scale, b.opacity)…stay in love with loops!





ÜBUNG	4

Ü 4.1 	Random rectangle Doro: 4 MInuten
Schreibt ein Skript, das auf eurer Seite zufällig zehn gleich große Rechtecke platziert. 

Ü 4.2 	Random rectangle Reloaded Doro: 2 MInuten
Schreibt ein Skript, das auf eurer Seite zufällig hundert Rechtecke platziert, denen eine zufällige Größe und Farbe zugeordnet werden. 

Ü 4.4	If Doro: 8 MInuten
Ergänzt euer Skript nun noch mit einer if-Abfrage: werden die Recktecke in der oberen Hälfte der Seite gezeichnet, sieht man nur ihre Kontur. Stehen sie in der unteren Hälfte, haben sie keine Kontor, dafür aber eine Flächenfarbe. Achtet bei der Bestimmung der Positition auf den richtigen Modus der Rechtecke mit b.rectMode(mode).




ÜBUNG 	5

Ü 5.1	array Doro: 1 MInute
Deklariert in einem Skript drei verschiedene Farben und speichert diese in einem Array. 

Ü 5.2	Random Plus array Doro: 7 MInuten
Lasst nun ein Rechteck in der Mitte der Seite zeichnen, das mit einer zufällig gewählten Farbe gefüllt wird. Dazu verwendet ihr euren Farb-Array und lasst eine Zahl auswürfeln, die ihr als Index für die Array-Abfrage verwendet.

Ü 5.3	b.lotto (vielleicht im block) Doro: 27 MInuten
Schreibt ein Script, dass zufällig sechs Lottozahlen auswürfelt und in sechs Textrahmen schreibt. Ganz klassisch spielen wir 6 aus 49. Dabei müsst ihr darauf achten, dass eine Zahl nicht zwei mal ausgesucht werden kann. Wer will, kann sein Skript so erweitern, dass die Zahlen auch in Textfeldern im InDesign-Dokument gezeigt werden.

Ü 5.4	b.Text 47-49 Doro: 2 MInuten
Kopiert einen eurer Text in das InDesign-Dokument und wählt ihn aus.  Schreibt nun ein Skript, das den ausgewählten Textrahmen erkennt und den Text in seine einzelne Wörter unterteilt. Wie viele Wörter kommen in dem Text vor?

Ü 5.5	b.creative
Lasst nun einen Loop über den Text laufen und dabei jedes Wort neu formatieren. Im Typo-Cheatsheet sind die Funktionen aufgelistet, die ihr verwenden könnt. Sucht euch drei weitere aus und probiert, sie anzuwenden.





ÜBUNG 	6

Ü 6.1	Load Text 54-01 Doro: 6 MInuten
Ladet mit basil.js einen Text, den ihr mitgebracht habe in euer Dokument. Dieser muss davor im Ordner data liegen. Platziert ihn nach eurer Lust und Laune in dem Dokument und richtet ihn mit der Funktion b.textAlign(alignMe). Was in die Klammer muss (und kann), findet ihr natürlich in der reference von basil.js. Blocksatz oder Flattersatz – nehmt, was ihr wollt.

Ü 6.2	Link text Doro: 3 MInuten
Im Package von basil.js sind auch Beispielskripte dabei. Die findet ihr in InDesign unter 

	Hilfsprogramme → Skripte → basiljs → examples. 

Dort gibt es in dem Unterordner typografy ein Beispiel mit dem Namen linkTextFrames. Seht euch das Skript in Sublime an und versucht, es auf euer Skript zu übertragen. Damit das funktioniert, müsst ihr zunächst euren vorhanden Textrahmen im Skript von 6.1 so klein halten, dass ein Übersatztext entsteht.

Ü 6.3	b.creative
Der Text steht in einem oder mehreren mit einander verlinkten Textrahmen, jetzt könnt ihr euch endlich an den Wörtern und Buchstaben austoben! Speichert wie gehabt die Wörter oder Buchstaben in einem Array. Was danach passiert, ist euch überlassen. Ihr könnt die Funktion b.startsWith() verwenden, oder mit contents arbeiten, Buchstaben hüpfen lassen oder Wörter miteinander verbinden. Und der letzte Tip für heute: mit b.bounds() macht das richtig Spaß. Lovely! 










